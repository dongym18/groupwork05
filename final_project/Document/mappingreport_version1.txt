The number of commits and the amount of code, the number of lines of code, the qualifications of programmers and the amount of code submission, and the number of code languages ​​and online resources
The number of commits submitted: the number of code submissions, the number of code submissions (total lines), the language of the code, and the number of online resources for the code language
Number of code submissions: Indicate how many items the programmer has written in total, or the degree of modification to the previous code. The greater the number, the more experienced the programmer is in writing the code, because each submission represents a revision of the previous code Or an idea for a new project.
Code submissions (total lines): I think using the total lines of code to measure the quality of a programmer is no different from measuring the quality of an airplane by weight.
The language of the code: different assembly languages ​​can be used to complete a project, and different machine languages ​​have their unique advantages. From this perspective, the language is like a tool in the toolbox. A screwdriver is capable of something a hammer cannot do, but would you say a screwdriver is better than a hammer? (Obviously the hammer is better).
In a few cases, the choice of language is indeed important, and some languages ​​obviously cannot handle certain situations. If you write front-end code, you don’t even have the right to choose a language. In some specific cases, performance is very important, then you can not choose a language, but this situation is rare. More is to measure the development speed of these languages, the probability of error, etc.
Number of online resources in code language:
When writing this hypothesis, I remembered a question that asked myself. How long are you really writing code every day? Are you searching or copying and pasting, or are you doing everything yourself? The number of online resources in different code languages ​​may be so large that you don't need to think about doing a project at all, just make a porter directly from github.
Average submission time:
The average submission time represents the developer’s development speed for a project, not to mention the error rate in the submitted code. Generally speaking, the programmer’s development speed is fast, which means that the programmer’s proficiency in the language used in the development project, of course. It may be that the online resources are very rich. If the programmer’s development speed for the development project is relatively slow, that is, the average submission time is relatively long, it is likely because the algorithm used by the development project does not understand, so this data largely reflects the ability of the programmer